package 计算机网络;

/**
 * 1.HTTP协议是非持久化的，单向的网络协议，在建立连接后只允许浏览器向服务器发出请求后，服务器才能返回相应的数据。当需要即时通讯时，通过轮询在特定的
 *      时间间隔（如1秒），由浏览器向服务器发送Request请求，然后将最新的数据返回给浏览器；而这时候就可以考虑使用WebSocket
 * 2.因为信令服务器推流需要时间，所以使用多线程提高播放视频的响应速度（一般情况下默认必须等上一个请求的结果返回后才能发送下一个请求），而又因为返回
 *      结果的时间不确定（默认时间太长断开了连接），一遍遍轮询的话太消耗资源，也浪费时间，所以使用WebSocket主动将视频url推送给前端
 * 3.连接过程：
 *      1. 浏览器、服务器建立TCP连接，三次握手。这是通信的基础，传输控制层，若失败后续都不执行。
 *      2. TCP连接成功后，浏览器通过HTTP协议向服务器传送WebSocket支持的版本号等信息。（开始前的HTTP握手）
 *      3. 服务器收到客户端的握手请求后，同样采用HTTP协议回馈数据。
 *      4. 当收到了连接成功的消息后，通过TCP通道进行传输通信。
 * 4.WebSocket在建立握手时，数据是通过HTTP传输的。但是建立之后，在真正传输时候是不需要HTTP协议的。
 */
public class WebSocketDemo1 {
}
