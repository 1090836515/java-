package 计算机网络;

/**
 * ⑴物理层: 将数据转成比特，在链路上传输；物理层的任务就是透明地传送比特流，确定连接电缆插头的定义及连接法。
 * ⑵数据链路层: 物理地址相邻结点传输数据，两个主机之间的数据传输，总是在一段一段的链路上传送的，好比两个国家之间要来往需要先坐出租车再坐飞机再坐出租车；
 *      在两个相邻节点之间传送数据时，数据链路层将网络层交下来的 IP 数据报组装成帧，在两个相邻节点间的链路上传送帧。每一帧包括数据和必要的控制信息
 *      （如同步信息，地址信息，差错控制等）。在接收数据时，控制信息使接收端能够知道一个帧从哪个比特开始和到哪个比特结束。这样，数据链路层在收到一个
 *      帧后，就可从中提出数据部分，上交给网络层。 控制信息还使接收端能够检测到所收到的帧中有无差错。
 * ⑶网络层: 封装成IP数据包(用户数据报UDP)，都可以叫分组，IP 协议【路由器转发数据】；网络层的任务就是要选择合适的路由，通过ARP协议找到MAC地址，
 *      使发送站的运输层所传下来的分组能够正确无误地按照地址找到目的站，并交付给目的站的运输层。
 * ⑷运输层:主要任务就是负责向两台主机进程之间的通信提供通用的数据传输服务。应用进程利用该服务传送应用层报文。“通用的”是指并不针对某一个特定的网络应用，
 *      而是多种应用可以使用同一个运输层服务。由于一台主机可同时运行多个线程，因此运输层有复用和分用的功能。所谓复用就是指多个应用层进程可同时使用下面
 *      运输层的服务，分用和复用相反，是运输层把收到的信息分别交付上面应用层中的相应进程。
 *      运输层主要使用以下两种协议:
 *          传输控制协议 TCP（Transmission Control Protocol）--提供面向连接的，可靠的数据传输服务。
 *          用户数据协议 UDP（User Datagram Protocol）--提供无连接的，尽最大努力的数据传输服务（不保证数据传输的可靠性）。
 * ⑸应用层:应用层直接为用户的应用进程提供服务。在因特网中的应用层协议很多，如支持万维网应用的HTTP协议，支持电子邮件的SMTP协议，支持文件传送的FTP协议,
 *      域名系统DNS等等,设计 HTTP 最初的目的是为了提供一种发布和接收 HTML 页面的方法
 */
public class 网络分层 {
}
