package Abstract;

/**
 * 1.抽象方法所在的类必须是抽象类,接口不是类
 * 2.用法：不能直接new抽象类，必须用子类继承抽象类，子类如果不是抽象类就必须重写所有抽象方法,创建子类对象进行使用
 * 3.一个抽象类中可以什么都没有
 * 4.抽象类中的方法可以有构造方法，但仅供子类创建对象时调用
 * 5.extends继承的有父类的成员数据变量和方法,如果子类中定义了成员变量就用子类的，若没有就用父类的
 * 6.抽象方法不能被声明为静态
 * 7.抽象方法不能用 private 修饰
 * 8.抽象方法不能用 final 修饰
 * 9.抽象类是被用于继承的，final修饰代表不可修改、不可继承的
 * 10.声明为 final 的方法不能被重写
 * 声明为 static 的方法不能被重写
 * 声明为 private 的方法不能被重写
 * 重写父类方法时，修改方法的权限只能从小范围到大范围
 * 返回类型与被重写方法的返回类型可以不相同，但是必须是父类返回值的子类
 * 重写方法不能抛出新的检查异常和比被重写方法申明更宽泛的异常(即只能抛出父类方法抛出异常的子类)
 */
public abstract class Animal {
    int a=10;

    public abstract void eat();

    public abstract void sleep();

    public Animal(){
        System.out.println("父类构造方法执行了。。。。");
    }
}
